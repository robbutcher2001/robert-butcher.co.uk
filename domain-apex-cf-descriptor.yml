AWSTemplateFormatVersion: '2010-09-09'
Description: Domain Apex Stack
Parameters:
  Env:
    Type: String
  PublicURL:
    Type: String
  DNSCertARN:
    Type: String
  S3OriginAccessIdentity:
    Type: String
Resources:
  #S3 Dist Bucket
  DomainApexFeDistributionBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Fn::Join: [ '-', [ 'domain-apex-fe-distribution', !Ref Env ] ]
      VersioningConfiguration:
        Status: Enabled
  DomainApexFeDistributionBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DomainApexFeDistributionBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Ref S3OriginAccessIdentity
            Action:
              - 's3:GetObject'
            Resource:
              Fn::Join: [ '', [ !GetAtt DomainApexFeDistributionBucket.Arn, '/*' ] ]
          - Effect: Allow
            Principal:
              AWS:
                - !Ref S3OriginAccessIdentity
            Action:
              - 's3:ListBucket'
            Resource: !GetAtt DomainApexFeDistributionBucket.Arn
  LambdaStaticDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Join: [ '-', [ 'domain-apex-s3-static-deployment-role', !Ref Env ] ]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'lambda.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSCodePipelineFullAccess'
  #Lambda Function Definitions
  StaticS3DeploymentFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: lambda/deployment/static-s3-deployer.handler
      Runtime: nodejs6.10
      Code:
        S3Bucket: 'lambda-source-location'
        S3Key: %{LambdaSourceKey}
      Role:
        Fn::GetAtt:
          - LambdaStaticDeploymentRole
          - Arn
      Timeout: 30
  #CloudFront distro to sit in front of bucket and reduce outbound cost
  DomainApexDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment:
          Fn::Join: [ '', [ 'DomainApex Disto [', !Ref Env, ']' ] ]
        Aliases:
        - !Ref PublicURL
        HttpVersion: http2
        ViewerCertificate:
          # AcmCertificateArn: !Ref DNSCertARN
          # Remove CloudFrontDefaultCertificate when DNSCert is usable
          CloudFrontDefaultCertificate: true
          # SslSupportMethod: sni-only
        Origins:
        - DomainName: !GetAtt DomainApexFeDistributionBucket.DomainName
          Id:
            Fn::Join: [ '-', [ 'origin', !GetAtt DomainApexFeDistributionBucket.DomainName ] ]
          S3OriginConfig:
            OriginAccessIdentity: !Ref S3OriginAccessIdentity
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          TargetOriginId:
            Fn::Join: [ '-', [ 'origin', !GetAtt DomainApexFeDistributionBucket.DomainName ] ]
          ForwardedValues:
            QueryString: true
            Headers:
            - '*'
            Cookies:
              Forward: all
          ViewerProtocolPolicy: redirect-to-https
